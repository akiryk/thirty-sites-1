{"version":3,"sources":["js/bundle.js"],"names":["pixiApp","displacementFilter","displacementImage","this","createPixiApp","init","loadPixiImage","PIXI","Application","width","height","backgroundColor","transparent","document","getElementById","appendChild","view","loader","pixiImage","load","setup","bind","resources","body","classList","add","app","stage","centerStageX","renderer","screen","centerStageY","mainPic","Sprite","texture","clouds","anchor","set","position","addDisplacementFilter","addChild","startPixiLoop","initScrollMagic","sprite","gameloop","delta","img","filters","DisplacementFilter","scale","x","y","makeHeaderScenes","makeParagraphScenes","makeDisplacementAnimationScene","makeController","ScrollMagic","Controller","duration","window","innerHeight","controller","querySelector","bottom","Scene","setTween","rotation","addTo","paras","Array","querySelectorAll","TweenLite","to","scene","from","scaleObj","distortionTween","TweenMax","clone","triggerHook","tween","FILTERX","FILTERY","offset","triggerElement"],"mappings":"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","file":"bundle.js","sourcesContent":["// TODO: use promises or some other better way to handle how initScrollMagic\n// is called. Right now, it's done in the Pixi setup method.\n(function() {\n\n  // Constants\n  const FILTERX     = 250,\n        FILTERY     = 140,\n        APPWIDTH    = 1200,\n        APPHEIGHT   = 1200,\n        APPBGCOLOR  = 0x000000;\n\n  const removeLoader = () => {\n    document.body.classList.add('remove-loader');\n  }\n\n  const App = {\n    pixiApp: null,\n    displacementFilter: null,\n    pixiImage: 'images/skater-1024.jpg',\n    displacementImage: 'images/clouds-1024.jpg',\n\n    init() {\n      this.createPixiApp();\n      this.loadPixiImage();\n    },\n\n    createPixiApp() {\n      this.pixiApp = new PIXI.Application({\n        width: APPWIDTH,\n        height: APPHEIGHT,\n        backgroundColor : APPBGCOLOR,\n        transparent: false,\n        antialias: false,\n      });\n      document.getElementById('display').appendChild(this.pixiApp.view);\n    },\n\n    /**\n     * Load images for Pixi animations\n     * Keep a reference to this.pixiImage for later manipulations\n     */\n    loadPixiImage() {\n      PIXI.loader\n        .add('mainPic', this.pixiImage)\n        .add('clouds', this.displacementImage)\n        .load(this.setup.bind(this));\n    },\n\n    /**\n     * Setup is a callback function from PIXI's load method and\n     * it fires once images are ready to handle.\n     */\n    setup(loader, resources){\n      // Fade out the loader animation\n      removeLoader();\n\n      // Cache some references\n      const app = this.pixiApp;\n      const stage = this.pixiApp.stage;\n\n      // Cache stage details\n      const centerStageX = app.renderer.screen.width/2;\n      const centerStageY = app.renderer.screen.height/2;\n\n      // Make sprites from images\n      const mainPic = new PIXI.Sprite(resources.mainPic.texture);\n      const clouds = new PIXI.Sprite(resources.clouds.texture);\n\n      // Center sprite origins\n      mainPic.anchor.set(.5);\n      clouds.anchor.set(.5);\n      mainPic.position.set(centerStageX, centerStageY);\n      clouds.position.set(centerStageX, centerStageY);\n\n      // Make Filters\n      this.addDisplacementFilter(clouds);\n\n      // Add Images\n      stage.addChild(mainPic);\n      stage.addChild(clouds);\n\n      this.startPixiLoop(clouds);\n      this.initScrollMagic();\n    },\n\n    startPixiLoop(sprite) {\n      // Displacement map animation loop\n      this.pixiApp.ticker.add(delta => gameloop(delta));\n\n      function gameloop(delta){\n        sprite.rotation -= .002;\n      }\n    },\n\n    addDisplacementFilter(img) {\n      this.displacementFilter = new PIXI.filters.DisplacementFilter(img);\n      this.displacementFilter.scale.x = FILTERX;\n      this.displacementFilter.scale.y = FILTERY;\n      this.pixiApp.stage.filters = [this.displacementFilter];\n    },\n\n    initScrollMagic() {\n      this.makeController();\n      this.makeHeaderScenes();\n      this.makeParagraphScenes();\n      this.makeDisplacementAnimationScene();\n    },\n\n    makeController() {\n      this.controller = new ScrollMagic.Controller();\n    },\n\n    makeHeaderScenes() {\n      const intro = document.getElementById('introHead');\n      const top = document.querySelector('.headline--top');\n      const bottom = document.querySelector('.headline--bottom');\n      const duration = .85 * window.innerHeight;\n      const controller = this.controller;\n\n      new ScrollMagic.Scene({ duration: duration })\n        .setTween(intro, 1, {rotation: 20})\n        .addTo(controller);\n\n      new ScrollMagic.Scene({ duration: duration })\n        .setTween(top, 1, {x: 200 })\n        .addTo(controller);\n\n      new ScrollMagic.Scene({ duration: duration })\n        .setTween(bottom, 1, {x: -200 })\n        .addTo(controller);\n    },\n\n    makeParagraphScenes() {\n      const paras = Array.from(document.querySelectorAll('.para'));\n      const controller = this.controller;\n\n      paras.forEach(para => {\n        const tween = TweenLite.to(para, 1, {transform: 'matrix(.98, -.075, .075, .98, 0, 0)'});\n        const scene = new ScrollMagic.Scene({\n          duration: '150%',\n          triggerHook: 'onEnter',\n          triggerElement: para,\n        })\n          .setTween(tween)\n          .addTo(controller);\n      })\n    },\n\n    makeDisplacementAnimationScene() {\n      const scaleObj = this.displacementFilter.scale;\n      const distortionTween = TweenMax.to(scaleObj, .85, {x: 0, y: 0});\n      const controller = this.controller;\n      const clone = document.getElementById('introHeadClone');\n\n      new ScrollMagic.Scene({\n        offset: 300,\n        duration: '100%',\n      })\n        .setTween(distortionTween)\n        .addTo(controller);\n\n      new ScrollMagic.Scene({\n        triggerElement: clone,\n        triggerHook: 'onEnter',\n        duration: '100%',\n      })\n        .setTween(TweenLite.to(scaleObj, 1, {x: FILTERX, y: FILTERY}))\n        .addTo(controller);\n    },\n\n  }\n\n  App.init();\n\n})();\n"]}